#!/usr/bin/env ruby
# encoding: utf-8

require 'yaml'

CHART_YAML= <%= p('charts') %>


CHART_YAML_TEST= <<~YAML
---
- name: mygrafana
  chart: stable/grafana
  namespace: default
  properties:
  - name: service.type
    value: ClusterIP
  - name: service.port
    value: 9000
- name: mygrafana2
  chart: stable/grafana
  properties:
  - name: service.type
    value: ClusterIP
  - name: service.port
    value: 9001
  - name: service.test
    value: 9002
YAML



data = CHART_YAML



data.each { |chart|
    t= ""
    count=0
    pnamespace = chart['namespace']
    pproperties = chart['properties']
    pversion = chart['version']
    if (pproperties != nil)
     chart['properties'].each{ |property|
     pname = property['name']
     pvalue = property['value']

     if (count==0)
      t= " --set #{pname}=#{pvalue}"
      count=1
     else
       t= "#{t},#{pname}=#{pvalue}"
     end
    }
    end


    if (pversion == nil)
        cmd ="helm --debug install "
        cmdUpgrade = "helm --debug upgrade "
    else
        cmd ="helm --debug install version=#{pversion}"
        cmdUpgrade = "helm --debug upgrade version=#{pversion}"
    end

    if (pnamespace == nil)
        cmd ="#{cmd} --name #{chart['name']} #{chart['chart']} #{t}"
        cmdUpgrade ="#{cmdUpgrade} #{chart['name']} #{chart['chart']} #{t}"
    else
        cmd = "#{cmd} --namespace #{pnamespace} --name #{chart['name']} #{chart['chart']} #{t}"
        cmdUpgrade = "#{cmdUpgrade} --namespace #{pnamespace} #{chart['name']} #{chart['chart']} #{t}"
    end

    puts "try to execute : #{cmd}"

    system(cmd) or system(cmdUpgrade) or puts "#{cmd} : ACTION FAILED #{cmd}"
}


