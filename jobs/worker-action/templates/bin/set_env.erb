#!/bin/bash
set -e
ASSERT_GEM_VERSION=3.1.2
source "/var/vcap/packages/action/bosh/runtime.env"

export PATH=$PATH:/var/vcap/packages/ruby-2.6.5-r0.29.0/bin/
gems_version=$(bundle exec gem -v)


if [[ $gems_version == *"$ASSERT_GEM_VERSION"* ]]; then
  echo "found correct rubygems version $gems_version"
else
  echo "wrong rubygems version: $gems_version"
  exit 1
fi
export GEM_PATH=$GEM_PATH:/var/vcap/packages/action/gem_home/ruby/2.6.0/
export KUBECONFIG=/var/vcap/jobs/worker-action/config/kubeconfig
export PATH=$PATH:/var/vcap/packages/kubectl/
export PATH=$PATH:/var/vcap/packages/jq/


password=<%= p('kubernetes.password') %>
endpoint=<%= p('kubernetes.host') %>
port=<%= p('kubernetes.port') %>


cluster_name="kubo"
user_name="admin"
address="https://${endpoint}:${port}"

cluster_name="kubo"
user_name="admin"
context_name=<%= p('kubernetes.usecontext') %>
<% if !p('kubernetes.config_path').empty? and p('kubernetes.config_path') != "nil" %>
export KUBECONFIG=<%= p('kubernetes.config_path') %>
<% else %>
<% if !p('kubernetes.config').empty? and p('kubernetes.config') != "nil" %>
cp /var/vcap/jobs/worker-action/config/config /var/vcap/jobs/worker-action/config/kubeconfig
<% else %>
address="https://${endpoint}:${port}"
kubectl config set-cluster "${cluster_name}" --server="${address}" --certificate-authority="/var/vcap/jobs/worker-action/config/ca_cert.pem" --embed-certs=true
kubectl config set-credentials "${user_name}" --token="${password}"
kubectl config set-context "${context_name}" --cluster="${cluster_name}" --user="${user_name}"
<% end %>
<% end %>
kubectl config use-context "${context_name}"
