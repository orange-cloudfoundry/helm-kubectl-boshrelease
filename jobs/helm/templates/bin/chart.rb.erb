#!/usr/bin/env ruby
# encoding: utf-8

require 'yaml'

CHART_YAML= <%= p('charts') %>


CHART_YAML_TEST= <<~YAML
---
- name: mygrafana
  chart: stable/grafana
  namespace: default
  properties:
  - name: service.type
    value: ClusterIP
  - name: service.port
    value: 9000
- name: mygrafana2
  chart: stable/grafana
  properties:
  - name: service.type
    value: ClusterIP
  - name: service.port
    value: 9001
  - name: service.test
    value: 9002
YAML



data = CHART_YAML



data.each { |chart|
    t= ""
    count=0
    pnamespace = chart['namespace']
    pproperties = chart['properties']
    pversion = chart['version']
    pdebug = chart['debug']

    if (pproperties != nil)
     chart['properties'].each{ |property|
     pname = property['name']
     pvalue = property['value']

     if (count==0)
      t= " --set #{pname}=#{pvalue}"
      count=1
     else
       t= "#{t},#{pname}=#{pvalue}"
     end
    }
    end

    ispresent = `helm list grafana| wc -l `.strip

    cmd ="helm install "
    cmdUpgrade = "helm upgrade "

    unless pdebug.nil? || pdebug == 0
        cmd = "#{cmd} --debug "
        cmdUpgrade = "#{cmdUpgrade} --debug"
    end

    unless pversion.nil? || pversion == 0
        cmd ="#{cmd} version=#{pversion}"
        cmdUpgrade = "#{cmdUpgrade} version=#{pversion}"
    end

    unless pnamespace.nil? || pnamespace == 0
        cmd = "#{cmd} --namespace #{pnamespace} "
        cmdUpgrade = "#{cmdUpgrade} --namespace #{pnamespace}"
    end

    cmd ="#{cmd} --name #{chart['name']} #{chart['chart']} #{t}"
    cmdUpgrade ="#{cmdUpgrade} #{chart['name']} #{chart['chart']} #{t}"

    puts "try to execute : #{cmd}"
    if ispresent=="2"
      puts "#{cmdUpgrade}"
      system(cmdUpgrade) or puts "ACTION FAILED"
    else
      puts "#{cmd}"
      system(cmd) or puts "ACTION FAILED #{cmd}"
    end
}


