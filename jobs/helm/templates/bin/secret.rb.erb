#!/usr/bin/env ruby
# encoding: utf-8

require 'yaml'
require 'base64'

SECRETS_YAML= <%= p('secrets') %>
MAX_RETRIES = 3
SLEEP_DURATION = 5
failCmd=[]

data = SECRETS_YAML

data.each { |secret|

    pnamespace = secret['namespace']
    pname = secret['name']
    pspec = secret['data']
    pannotations =secret['annotations']
    ptype= secret['type']
    plabels= secret['labels']
    pfilename="/tmp/#{pname}.yml"


    File.open(pfilename, 'w+') do |f|
      f.puts("apiVersion: v1")
      f.puts("kind: Secret")
      f.puts("metadata:")
      f.puts("  name: #{pname}")
      f.puts("  namespace: #{pnamespace}")
      f.puts("  annotations:")
      if (pannotations != nil)
           pannotations.each{ |annotation|
            f.puts("    #{annotation['name']}: #{annotation['value']}")
           }
      end
      f.puts("  labels:")
      if (plabels != nil)
            plabels.each{ |label|
            f.puts("    #{label['name']}: #{label['value']}")
           }
      end
      if (pspec != nil)
    f.puts("data:")
        pspec.each { |spec|
        b=  Base64.encode64(spec['value'])
        b.delete!("\n")
        f.puts("  #{spec['name']}: #{b}")
        }
      f.puts(ptype.to_s)
    end
    end
    cmd = "kubectl apply -f #{pfilename} "
    # Begin the retryable operation
    retry_count = 0
    begin
      result=system("#{cmd} > /dev/null 2>&1")
      while !result && retry_count < MAX_RETRIES
        retry_count += 1
        sleep SLEEP_DURATION
        puts "retry #{retry_count}"
        result=system("#{cmd} > /dev/null 2>&1")
      end
      if !result
        failCmd.push("#{cmd}")
        puts "ACTION delayed after all commands: #{cmd}"
      end
      if result
         puts "ACTION SUCCESS: #{cmd}"
      end
    end

}
isOnFail=false
failCmd.each { |cmd|
  result=system("#{cmd} > /dev/null")
        if !result
          puts "ACTION FAILED: #{cmd}"
          isOnFail=true
        end
        if result
           puts "ACTION SUCCESS: #{cmd}"
        end
}
if (isOnFail)
    fail("some action cannot be performed")
end

