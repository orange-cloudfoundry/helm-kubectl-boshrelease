#!/usr/bin/env ruby
# encoding: utf-8

require 'yaml'
REPOSITORY_YAML = <%= p('repositories') %>



REPOSITORY_YAML_TEST = [{"name"=>"stable", "url"=>"https://kubernetes-charts.storage.googleapis.com/"}, {"name"=>"incubator", "url"=>"https://kubernetes-charts-incubator.storage.googleapis.com/"},
{"name"=>"svc-cat", "url"=>"https://svc-catalog-charts.storage.googleapis.com"}]

data = REPOSITORY_YAML

isOnFail=false
prepository_mirror_url= <%= p('repository_mirror.url') %>
prepository_mirror_enabled= <%= p('repository_mirror.enabled') %>
repository_mirror_ca_cert= <%= p('repository_mirror.ca_cert') %>
puts "============================="
puts " Helm repo add  "
puts "============================="
puts ""
data.each { |repository|
     pname = repository['name']
     purl = repository['url']
     if (prepository_mirror_enabled)
        cmd = "helm repo add  #{pname} #{prepository_mirror_url} "
     else
        if (repository_mirror_ca_cert<> '')
            cmd = "helm repo add  #{pname} #{purl} "
        else
            cmd = "helm repo add  --ca-file=/var/vcap/store/helm/config/mirror_ca_cert.pem #{pname} #{purl} "
        end
     end

    # Begin the retryable operation

    result=system("#{cmd} > /dev/null 2>&1")
    if !result
        puts "ACTION FAILED: #{cmd}"
        isOnFail=true
    end
    if result
        puts "ACTION SUCCESS: #{cmd}"
    end
}
if (isOnFail)
     fail("some action cannot be performed")
end
puts "============================="
puts " Helm repo update "
puts "============================="
puts ""
cmd = "helm repo update"
result=system("#{cmd} > /dev/null 2>&1")
if !result
    puts "ACTION FAILED: #{cmd}"
    isOnFail=true
end
if result
     puts "ACTION SUCCESS: #{cmd}"
end

if (isOnFail)
     fail("some action cannot be performed")
 end
puts "============================="
puts " Helm update repo done"
